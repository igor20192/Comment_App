services:
  db:
    image: postgres:17rc1-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./backend/.env.db
    ports:
      - 5432:5432

  redis:
    image: redis:latest
    ports:
      - 6379:6379

  api:
    build:
      context: ./backend  # Path to Dockerfile for backend
      dockerfile: Dockerfile
    command: bash -c "
                    mkdir -p /app/staticfiles /app/media /app/static/images &&
                    python manage.py makemigrations && 
                    python manage.py migrate && 
                    python manage.py collectstatic --noinput && 
                    python run_uvicorn.py"
    user: appuser                
    env_file:
      - ./backend/.env  # Environment variables for backend
    volumes:
      - ./backend:/app  # Mounting the backend sources
      - staticfiles_volume:/app/staticfiles
      - media_volume:/app/media
      - static_images_volume:/app/static/images
    ports:
      - 8000:8000
    
    depends_on:
      - db
      - redis

  nginx: 
        restart: unless-stopped
        build:
            context: .
            dockerfile: ./comment-frontend/Dockerfile
        ports:
            - 80:80
            - 443:443
        volumes:
            - staticfiles_volume:/app/staticfiles
            - media_volume:/app/media
            - static_images_volume:/app/static/images
            - ./comment-frontend/nginx/certbot/conf:/etc/letsencrypt
            - ./comment-frontend/nginx/certbot/www:/var/www/certbot
        depends_on: 
            - api
  
  certbot:
        image: certbot/certbot
        restart: unless-stopped
        volumes:
            - ./comment-frontend/nginx/certbot/conf:/etc/letsencrypt
            - ./comment-frontend/nginx/certbot/www:/var/www/certbot
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"       

volumes:
  postgres_data:
  staticfiles_volume:
  media_volume:
  static_images_volume: